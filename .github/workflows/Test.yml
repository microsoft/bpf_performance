# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

name: Test

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      configuration:
        required: true
        type: string
      option:
        required: false
        type: string

permissions:
  contents: read

env:
  XDP_VERSION: '1.1.0'

jobs:
  test:

    runs-on: ${{inputs.platform}}
    env:
      BUILD_TYPE: ${{inputs.configuration}}

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit

    - name: Install prerequisites - Ubuntu-22.04
      if: inputs.platform == 'ubuntu-22.04'
      run: |
        sudo apt update
        sudo apt-get install -y \
         gcc-multilib \
         lcov \
         pkg-config \
         libelf-dev \

    - name: Clone and build libbpf - Ubuntu-22.04
      if: inputs.platform == 'ubuntu-22.04'
      run: |
        git clone https://github.com/libbpf/libbpf.git
        cd libbpf
        git checkout v0.7.0
        cd src
        make
        sudo LIBDIR=/lib/x86_64-linux-gnu make install
        sudo ldconfig

    - name: Get Linux Kernel version
      if: inputs.platform == 'ubuntu-22.04'
      run: |
        echo "COMMIT_SHA=$(uname -r)" >> $env:GITHUB_ENV

    - name: Download the eBPF for Windows MSI
      if: inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022'
      uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765
      with:
        name: "ebpf-for-windows - MSI installer (none_Release)"
        path: ${{github.workspace}}/local_packages

    - name: Download BPF Performance tests - Windows-2019 or Windows-2022
      if: inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022'
      uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765
      with:
        name: "build-${{inputs.Configuration}}-${{inputs.platform}}-none"
        path: ${{github.workspace}}/build/bin

    - name: Download BPF Performance tests - Ubuntu-22.04
      if: inputs.platform == 'ubuntu-22.04'
      uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765
      with:
        name: "build-${{inputs.Configuration}}-${{inputs.platform}}-${{inputs.option}}"
        path: ${{github.workspace}}/build/bin

    - name: Install prerequisites - Windows-2019 or Windows-2022
      if: inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022'
      working-directory: ${{github.workspace}}/local_packages
      run: |
        Start-Process msiexec.exe -Wait -ArgumentList '/i ebpf-for-windows.msi /quiet /qn /norestart /log install.log ADDLOCAL=ALL'
        echo "C:\Program Files\ebpf-for-windows" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Get eBPF for Windows version
      if: inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022'
      run: |
        $version = (Get-Item "C:\Program Files\ebpf-for-windows\EbpfApi.dll").VersionInfo.FileVersion
        echo "COMMIT_SHA=$version" >> $env:GITHUB_ENV

    - name: Get Linux Kernel version
      if: inputs.platform == 'ubuntu-22.04'
      run: |
        echo "COMMIT_SHA=$(uname -r)" >> $env:GITHUB_ENV

    - name: Create results directory
      run: |
        mkdir -p ${{github.workspace}}/results

    - name: Create commit_sha.txt - Windows-2019 or Windows-2022
      if: inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022'
      run:
        echo ${{env.COMMIT_SHA}} | Out-File -FilePath ${{github.workspace}}/results/commit_sha.txt -Encoding utf8 -Append

    - name: Create commit_sha.txt - Ubuntu-22.04
      if: inputs.platform == 'ubuntu-22.04'
      run: |
        echo ${{env.COMMIT_SHA}} >> ${{github.workspace}}/results/commit_sha.txt

    - name: Tests - Ubuntu-22.04
      if: inputs.platform == 'ubuntu-22.04' && inputs.option == 'none'
      working-directory: ${{github.workspace}}/build/bin
      run: |
        chmod a+x ./bpf_performance_runner
        sudo ./bpf_performance_runner -i tests.yml -r | tee ${{github.workspace}}/results/jit-${{inputs.platform}}-${{env.BUILD_TYPE}}.csv
        exit ${PIPESTATUS[0]}

    - name: Tests - Windows 2019 or Windows 2022 - Native
      if: (inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022') && inputs.option == 'none'
      working-directory: ${{github.workspace}}/build/bin
      run: |
        ${{env.BUILD_TYPE}}\bpf_performance_runner.exe -i tests.yml -e .sys -r | Tee-Object -FilePath ${{github.workspace}}/results/native-${inputs.platform}-${{env.BUILD_TYPE}}.csv

    - name: Tests - Windows 2019 or Windows 2022 - JIT
      if: (inputs.platform == 'windows-2019' || inputs.platform == 'windows-2022') && inputs.option == 'jit'
      working-directory: ${{github.workspace}}/build/bin
      # Run with option to ignore failing return code
      run: |
        ${{env.BUILD_TYPE}}\bpf_performance_runner.exe -i tests.yml -r | Tee-Object -FilePath ${{github.workspace}}/results/native-${inputs.platform}-${{env.BUILD_TYPE}}.csv

    - name: Upload results
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
      with:
        name: results-${{env.BUILD_TYPE}}-${{inputs.platform}}-${{inputs.option}}
        path: |
          ${{github.workspace}}/results/*.csv
          ${{github.workspace}}/results/commit_sha.txt

    - name: Upload profile
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1
      with:
        name: profile-${{env.BUILD_TYPE}}-${{inputs.platform}}-${{inputs.option}}
        path: |
          ${{github.workspace}}/results/*.etl
