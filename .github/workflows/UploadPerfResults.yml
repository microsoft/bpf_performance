# Copyright (c) Microsoft Corporation
# SPDX-License-Identifier: MIT

# This workflow uploads the performance results to a Postgres database.

name: Reusable Test Workflow

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

permissions:
  contents: read

jobs:
  upload_results:
    permissions:
      contents: read  # for actions/checkout to fetch code
      id-token: write  # for azure/login to get credentials from GitHub OIDC provider
    strategy:
      matrix:
        platform: [ 'ubuntu-22.04', 'windows-2019', 'windows-2022' ]

    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
      with:
        egress-policy: audit

    - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

    - name: Download performance result artifacts
      uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4.1.6
      with:
        name: results-Release-${{matrix.platform}}-none
        path: results

    - name: Post-process results
      run: |
        python3 scripts/process_results.py --csv-directory ${{github.workspace}}/results --sql-script-file ${{github.workspace}}/results/upload.sql --commit_id "$(cat ${{github.workspace}}/results/commit_sha.txt)" --platform ${{matrix.platform}} --repository ${{github.repository}}

    - name: Log into Azure
      uses: azure/login@8c334a195cbb38e46038007b304988d888bf676a # v2.0.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Fetch secrets
      run: |
        az keyvault secret show --vault-name bpfperformacesecrets --name PGDATABASE --query value | sed 's/"//g' > ${{github.workspace}}/PGDATABASE
        az keyvault secret show --vault-name bpfperformacesecrets --name PGHOST --query value | sed 's/"//g' >> ${{github.workspace}}/PGHOST
        az keyvault secret show --vault-name bpfperformacesecrets --name PGUSER --query value | sed 's/"//g' >> ${{github.workspace}}/PGUSER
        az keyvault secret show --vault-name bpfperformacesecrets --name PGPASSWORD --query value | sed 's/"//g' >> ${{github.workspace}}/PGPASSWORD
        az keyvault secret show --vault-name bpfperformacesecrets --name PGPORT --query value | sed 's/"//g' >> ${{github.workspace}}/PGPORT

    - name: Upload results to POSTGRES
      run: |
        export PGPASSWORD=$(cat ${{github.workspace}}/PGPASSWORD)
        export PGHOST=$(cat ${{github.workspace}}/PGHOST)
        export PGUSER=$(cat ${{github.workspace}}/PGUSER)
        export PGPORT=$(cat ${{github.workspace}}/PGPORT)
        export PGDATABASE=$(cat ${{github.workspace}}/PGDATABASE)
        psql -f ${{github.workspace}}/results/upload.sql
